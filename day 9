class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        if(nums==null|| nums.length==0){
            return new ArrayList<>();
        }
        Arrays.sort(nums);

        int n=nums.length;
        int[] dp= new int[n];
        int[] prev=new int[n];

        int maxLen=0;
        int maxIdx=-1;

        for(int i=0;i<n;i++){
            dp[i]=1;
            prev[i]=-1;
            for(int j=0;j<i;j++){
                if(nums[i]%nums[j]==0&& dp[j]+1>dp[i]){
                    dp[i]=dp[j]+1;
                    prev[i]=j;
                }
            }
            if(dp[i]>maxLen){
                maxLen=dp[i];
                maxIdx=i;
            }
        }
        List<Integer> result= new ArrayList<>();
        while(maxIdx!=-1){
            result.add(nums[maxIdx]);
            maxIdx=prev[maxIdx];
        }
        return result;
    }

}
